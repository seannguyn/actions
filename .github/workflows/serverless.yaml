name: Build and deploy serverless application on ZBI Kubernetes

on:
  workflow_call:
    inputs:
      docker_repo:
        required: true
        type: string
    secrets:
      DOCKER_PASSWORD:
        required: true
      GH_PAT:
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set-vars.outputs.IMAGE_NAME }}
      image_tag: ${{ steps.set-vars.outputs.IMAGE_TAG }}
      repo_name: ${{ steps.set-vars.outputs.REPO_NAME }}
      org_name: ${{ steps.set-vars.outputs.ORG_NAME }}
      branch: ${{ steps.set-vars.outputs.BRANCH }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          path: app

      - name: Set Variables
        id: set-vars
        working-directory: app
        run: |
          pwd
          ls
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=${{ inputs.docker_repo }}/$(basename ${{ github.repository }})
          REPO_NAME=$(basename ${{ github.repository }})
          ORG_NAME=${{ github.repository_owner }}
          BRANCH=$REPO_NAME-${{ github.sha }}-deployment

          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_ENV"
          echo "REPO_NAME=$REPO_NAME" >> "$GITHUB_ENV"
          echo "ORG_NAME=$ORG_NAME" >> "$GITHUB_ENV"
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
          echo "REPO_NAME=$REPO_NAME" >> "$GITHUB_OUTPUT"
          echo "ORG_NAME=$ORG_NAME" >> "$GITHUB_OUTPUT"
          echo "BRANCH=$BRANCH" >> "$GITHUB_OUTPUT"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.docker_repo }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        id: build-container
        uses: docker/build-push-action@v6
        with:
          context: "./app"
          push: true
          sbom: true
          provenance: mode=max
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          file: ./app/Dockerfile

  create-pr-in-deployment:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ needs.build-and-push.outputs.image_name }}
      IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
      REPO_NAME: ${{ needs.build-and-push.outputs.repo_name }}
      ORG_NAME: ${{ needs.build-and-push.outputs.org_name }}
      BRANCH: ${{ needs.build-and-push.outputs.branch }}

    steps:
      - name: Checkout Deployment Repo
        uses: actions/checkout@v3
        with:
          repository: seannguyn/deployment
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: deployment

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create Kustomization YAML from Template
        working-directory: deployment
        run: |
          pwd
          ls
          echo "ENV VARIABLES:"
          echo "IMAGE_NAME=${{ env.IMAGE_NAME }}"
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
          echo "ORG_NAME=${{ env.ORG_NAME }}"
          echo "REPO_NAME=${{ env.REPO_NAME }}"

          mkdir -p orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}
          cp template-kustomization.yaml orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/kustomization.yaml
          
          sed -i "s|\${REPO_NAME}|${{ env.REPO_NAME }}|g" orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/kustomization.yaml
          sed -i "s|\${IMAGE_NAME}|${{ env.IMAGE_NAME }}|g" orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/kustomization.yaml
          sed -i "s|\${IMAGE_TAG}|${{ env.IMAGE_TAG }}|g" orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/kustomization.yaml
      
      - name: Add resource to main Kustomization YAML
        run: |
          echo "- orgs/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}" >> kustomization.yaml

      - name: Commit and Push Changes
        working-directory: deployment
        run: |
          git checkout -b ${{ env.BRANCH }}
          git add .
          git commit -m "Add kustomization for ${{ env.REPO_NAME }}"
          git push origin ${{ env.BRANCH }}

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const { repo, owner } = context.repo;
            const response = await github.rest.pulls.create({
              owner: '${{ github.repository_owner }}',
              repo: 'deployment',
              title: 'Add deployment for ${{ env.REPO_NAME }}',
              head: '${{ env.BRANCH }}',
              base: 'main',
              body: 'This PR adds a new deployment for `${{ env.REPO_NAME }}`.',
            });
            console.log(`Pull request created: ${response.data.html_url}`);
